cmake_minimum_required(VERSION 2.6)
IF (DEFINED ENV{CHAOS_BUNDLE} )
  include($ENV{CHAOS_BUNDLE}/tools/project_template/CMakeChaos.txt)
ELSE()
  MESSAGE(STATUS "STANDALONE, environment CHAOS_BUNDLE defined")
  IF (NOT CMAKE_INSTALL_PREFIX) 
    MESSAGE(fatal "you must add -DCMAKE_INSTALL_PREFIX=<dir>")
  ELSE()
    MESSAGE(STATUS "install prefix ${CMAKE_INSTALL_PREFIX}")
  ENDIF()
  INCLUDE_DIRECTORIES(. ../..)
  LINK_DIRECTORIES(${CMAKE_BINARY_DIR}/build ${CMAKE_INSTALL_PREFIX}/lib)
ENDIF()



# HTTP_LIB_DEBUG
# CREST_DEBUG
ADD_DEFINITIONS(-g -O2)
INCLUDE_DIRECTORIES(src)
IF (CMAKE_HOST_APPLE)
   ADD_DEFINITIONS(-DOSX)
   MESSAGE(STATUS "OSX variant")
ENDIF()
SET(crest_src src/chaos_crest.c src/http_lib.c )
SET(crest_test_src test/crest_cu_test.c)
SET(crest_test_ui_src test/chaos_crest_ui_test.c)
ADD_EXECUTABLE(crest_test ${crest_test_src})
ADD_EXECUTABLE(chaos_crest_ui_test ${crest_test_ui_src})
IF(BUILD_FORCE_STATIC)
ADD_LIBRARY(common-crest STATIC ${crest_src} )
ELSE()
ADD_LIBRARY(common-crest SHARED ${crest_src} )
ENDIF()
TARGET_LINK_LIBRARIES(crest_test common-crest pthread)
TARGET_LINK_LIBRARIES(chaos_crest_ui_test common-crest pthread)
INSTALL(FILES src/chaos_crest.h DESTINATION include/common/crest)
INSTALL_TARGETS(/lib  common-crest)
INSTALL_TARGETS(/bin  crest_test)
INSTALL_TARGETS(/bin  chaos_crest_ui_test)

